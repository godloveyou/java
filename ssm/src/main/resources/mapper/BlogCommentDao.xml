<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.nilaile.ssm.dao.BlogCommentDao">
  <resultMap id="BaseResultMap" type="cn.nilaile.ssm.entity.BlogComment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="pid_id" jdbcType="INTEGER" property="pidId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="publish_date" jdbcType="TIMESTAMP" property="publishDate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.nilaile.ssm.entity.BlogComment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, article_id, pid_id, user_id, publish_date
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.nilaile.ssm.entity.BlogComment">
    insert into blog_comment (id, article_id, pid_id, 
      user_id, publish_date, content
      )
    values (#{id,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}, #{pidId,jdbcType=INTEGER}, 
      #{userId,jdbcType=VARCHAR}, #{publishDate,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.nilaile.ssm.entity.BlogComment">
    insert into blog_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="pidId != null">
        pid_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="publishDate != null">
        publish_date,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="pidId != null">
        #{pidId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null">
        #{publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.nilaile.ssm.entity.BlogComment">
    update blog_comment
    <set>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="pidId != null">
        pid_id = #{pidId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null">
        publish_date = #{publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.nilaile.ssm.entity.BlogComment">
    update blog_comment
    set article_id = #{articleId,jdbcType=INTEGER},
      pid_id = #{pidId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.nilaile.ssm.entity.BlogComment">
    update blog_comment
    set article_id = #{articleId,jdbcType=INTEGER},
      pid_id = #{pidId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>