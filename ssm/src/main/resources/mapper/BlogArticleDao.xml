<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.nilaile.ssm.dao.BlogArticleDao">

  <resultMap id="BaseResultMap" type="cn.nilaile.ssm.entity.BlogArticle">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="blog_des" jdbcType="VARCHAR" property="blogDes" />
    <result column="click_count" jdbcType="INTEGER" property="clickCount" />
    <result column="is_recommend" jdbcType="VARCHAR" property="isRecommend" />
    <result column="publish_date" jdbcType="TIMESTAMP" property="publishDate" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
  </resultMap>
  
  <resultMap extends="BaseResultMap"   id="ResultMapWithBLOBs"   type="cn.nilaile.ssm.entity.BlogArticle">
    <result column="content_html" jdbcType="LONGVARCHAR" property="contentHtml" />
    <result column="content_md" jdbcType="LONGVARCHAR" property="contentMd" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, title, blog_des, click_count, is_recommend, publish_date, category_id, user_id
  </sql>
  <sql id="Blob_Column_List">
    content_html,content_md
  </sql>
  
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />,
     <include refid="Blob_Column_List" />
    from blog_article
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
  
  
  <resultMap id="detailedBlogResultMap"  type="cn.nilaile.ssm.entity.BlogArticle" autoMapping="true">
  	<result column="id" jdbcType="VARCHAR" property="id" />
  	<result column="content_html"  jdbcType="LONGVARCHAR" property="contentHtml" />
  	<result column="conten_md"     jdbcType="LONGVARCHAR"    property="contentMd" />
 	<result column="title" 	jdbcType="VARCHAR" property="title" />
    <result column="blog_des" jdbcType="VARCHAR" property="blogDes" />
    <result column="click_count" jdbcType="INTEGER" property="clickCount" />
    <result column="is_recommend" jdbcType="VARCHAR" property="isRecommend" />
    <result column="publish_date" jdbcType="TIMESTAMP" property="publishDate" />
    
  <association property="blogCategory" javaType="cn.nilaile.ssm.entity.BlogCategory">
    	<id property="cid" column="cid"/>
	    <result property="cname" column="cname"/>
    </association>
   
    <collection property="listBlogTags" ofType="cn.nilaile.ssm.entity.BlogTag" >
	    <id property="id"   column="eid"/>
	    <result property="tagName" column="tag_name"/>
    </collection>
    
    <collection property="listBlogComment"  ofType="cn.nilaile.ssm.entity.BlogComment">
	    <id property="id" column="did"/>
	    <result property="content" column="content"/>
	    <result property="publishDate" column="publish_date" jdbcType="TIMESTAMP" />
    </collection>
  	
  </resultMap>
  
  <resultMap type="cn.nilaile.ssm.entity.BlogArticle"   id="">
  	
  </resultMap>
  
   
    <select id="findDetailById"  resultMap="detailedBlogResultMap"  parameterType="java.lang.String" >
  		SELECT
  			A.id,
			A.title,
			A.category_id,
			A.content_html,
			'' as content_md,
			A.blog_des,
			A.click_count,
			A.is_recommend,
			A.publish_date,
			D.id as did,
			D.content,
			D.publish_date,
			D.user_id,
			B.cid,
			B.cname,
			C.id as cid,
			E.id as eid,
			E.tag_name
		FROM
			blog_article A
		LEFT JOIN blog_category B ON A.category_id = B.cid
		LEFT JOIN blog_comment D ON A.id = D.article_id
		LEFT JOIN blog_article_tag C ON C.article_id= A.id
		LEFT JOIN blog_tag E ON E.id = C.tag_id
		where 
			A.id=#{id}
  </select>
  
  
  <select id="findByPage"  resultMap="detailedBlogResultMap"  parameterType="cn.nilaile.ssm.entity.BlogArticle" >
  		SELECT
  			A.id,
			A.title,
			'' as content_html,
			'' as content_md,
			A.blog_des,
			A.click_count,
			A.is_recommend,
			A.category_id,
			A.publish_date,
			D.id as did,
			D.content,
			D.publish_date,
			D.user_id,
			B.cid,
			B.cname,
			C.id as cid,
			C.tag_id,
			E.id as eid,
			E.tag_name
		FROM
			blog_article A
		LEFT JOIN blog_category B ON A.category_id = B.cid
		LEFT JOIN blog_comment D ON A.id = D.article_id
		LEFT JOIN blog_article_tag C ON C.article_id= A.id
		LEFT JOIN blog_tag E ON E.id = C.tag_id
		<where>
			    <if test="title != null">A.title  like CONCAT( '%', '${title}',  '%')</if>
			    <if test="categoryId != null">A.category_id=#{categoryId}</if>
			    <if test="tagId != null">C.tag_id=#{tagId}</if>
		</where>
	    order by A.publish_date desc
		
  </select>
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from blog_article
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insert"    keyProperty="id"  parameterType="cn.nilaile.ssm.entity.BlogArticle">
  <selectKey keyProperty="id" resultType="String" order="BEFORE">  
        select  replace(uuid(),'-','')   from dual  
    </selectKey>  
    
    insert into blog_article (id, title, blog_des, 
      click_count, is_recommend, publish_date, 
      category_id, user_id, content_html,content_md
      )
    values (#{id,jdbcType=VARCHAR},#{title,jdbcType=VARCHAR}, #{blogDes,jdbcType=VARCHAR}, 
      #{clickCount,jdbcType=INTEGER}, #{isRecommend,jdbcType=VARCHAR}, #{publishDate,jdbcType=TIMESTAMP}, 
      #{categoryId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{contentHtml,jdbcType=LONGVARCHAR},#{contentMd,jdbcType=LONGVARCHAR}
      )
  </insert>
  
  
  
 <!--  <insert id="insertSelective"   useGeneratedKeys="true"  keyProperty="id"  parameterType="cn.nilaile.ssm.entity.BlogArticle">
    insert into blog_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
    
      <if test="title != null">
        title,
      </if>
      <if test="blogDes != null">
        blog_des,
      </if>
      <if test="clickCount != null">
        click_count,
      </if>
      <if test="isRecommend != null">
        is_recommend,
      </if>
      <if test="publishDate != null">
        publish_date,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="contentHtml != null">
        content_html,
      </if>
        <if test="contentMd != null">
        content_md
      </if>
      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="blogDes != null">
        #{blogDes,jdbcType=VARCHAR},
      </if>
      <if test="clickCount != null">
        #{clickCount,jdbcType=INTEGER},
      </if>
      <if test="isRecommend != null">
        #{isRecommend,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null">
        #{publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="contentHtml != null">
        #{contentHtml,jdbcType=LONGVARCHAR},
      </if>
       <if test="contentMd != null">
        #{contentMd,jdbcType=LONGVARCHAR}
      </if>
    </trim>
  </insert> -->
  
  <update id="updateClick" parameterType="cn.nilaile.ssm.entity.BlogArticle">
  	 update blog_article
  	 	set click_count = #{clickCount,jdbcType=INTEGER}
  	  where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateById" parameterType="cn.nilaile.ssm.entity.BlogArticle">
    update blog_article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="blogDes!= null">
        blog_des = #{blogDes,jdbcType=VARCHAR},
      </if>
      <if test="clickCount != null">
        click_count = #{clickCount,jdbcType=INTEGER},
      </if>
      <if test="isRecommend != null">
        is_recommend = #{isRecommend,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null">
        publish_date = #{publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="contentHtml != null">
        content_html = #{contentHtml,jdbcType=LONGVARCHAR},
      </if>
      <if test="contentMd != null">
        content_md = #{contentMd,jdbcType=LONGVARCHAR}
      </if>
      
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.nilaile.ssm.entity.BlogArticle">
    update blog_article
    set title = #{title,jdbcType=VARCHAR},
      blog_des = #{blogDes,jdbcType=VARCHAR},
      click_count = #{clickCount,jdbcType=INTEGER},
      is_recommend = #{isRecommend,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=TIMESTAMP},
      category_id = #{categoryId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      content_html = #{contentHtml,jdbcType=LONGVARCHAR},
      content_md = #{contentMd,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="cn.nilaile.ssm.entity.BlogArticle">
    update blog_article
    set title = #{title,jdbcType=VARCHAR},
      blog_des = #{blogDes,jdbcType=VARCHAR},
      click_count = #{clickCount,jdbcType=INTEGER},
      is_recommend = #{isRecommend,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=TIMESTAMP},
      category_id = #{categoryId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
    <update id="updateByPrimaryKeySelective" parameterType="cn.nilaile.ssm.entity.BlogArticle">
    update blog_article
    set title = #{title,jdbcType=VARCHAR},
      blog_des = #{blogDes,jdbcType=VARCHAR},
      is_recommend = #{isRecommend,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
       content_html = #{contentHtml,jdbcType=LONGVARCHAR},
      content_md = #{contentMd,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  
</mapper>