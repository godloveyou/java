<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.nilaile.ssm.dao.BlogArticleDao">

  <resultMap id="BaseResultMap" type="cn.nilaile.ssm.entity.BlogArticle">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="blog_des" jdbcType="VARCHAR" property="blogDes" />
    <result column="click_count" jdbcType="INTEGER" property="clickCount" />
    <result column="is_recommend" jdbcType="VARCHAR" property="isRecommend" />
    <result column="publish_date" jdbcType="TIMESTAMP" property="publishDate" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
  </resultMap>
  
  <resultMap extends="BaseResultMap"   id="ResultMapWithBLOBs"   type="cn.nilaile.ssm.entity.BlogArticle">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, title, blog_des, click_count, is_recommend, publish_date, category_id, user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />,
     <include refid="Blob_Column_List" />
    from blog_article
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  
  
  <resultMap id="detailedBlogResultMap" type="cn.nilaile.ssm.entity.BlogArticle">
  <result column="id" jdbcType="VARCHAR" property="id" />
 	<result column="title" jdbcType="VARCHAR" property="title" />
    <result column="blog_des" jdbcType="VARCHAR" property="blogDes" />
    <result column="click_count" jdbcType="INTEGER" property="clickCount" />
    <result column="is_recommend" jdbcType="VARCHAR" property="isRecommend" />
    <result column="publish_date" jdbcType="TIMESTAMP" property="publishDate" />
    
    <association property="blogCategory" javaType="cn.nilaile.ssm.entity.BlogCategory">
    	<id property="cid" column="cid"/>
	    <result property="cname" column="cname"/>
    </association>
    
    <collection property="listBlogTags" ofType="cn.nilaile.ssm.entity.BlogTag">
	    <id property="id" column="id"/>
	    <result property="tagName" column="tag_name"/>
    </collection>
    
    
    <collection property="listBlogComment" ofType="cn.nilaile.ssm.entity.BlogComment">
	    <id property="id" column="id"/>
	    <result property="content" column="content"/>
	    <result property="publishDate" column="publish_date" jdbcType="TIMESTAMP" />
    </collection>
  	
  </resultMap>
  
  
  <select id="findByPage"  resultMap="detailedBlogResultMap"  parameterType="cn.nilaile.ssm.entity.BlogArticle" >
  		SELECT
  			A.id,
			A.title,
			A.blog_des,
			A.click_count,
			A.is_recommend,
			A.publish_date,
			B.cid,
			B.cname,
			C.id,
			C.tag_name,
			D.id,
			D.content,
			D.publish_date,
			D.user_id
		FROM
			blog_article A
		LEFT JOIN blog_category B ON A.category_id = b.cid
		LEFT JOIN blog_article_tag M ON M.article_id = A.id
		LEFT JOIN blog_tag C ON M.tag_id = C.id
		LEFT JOIN blog_comment D ON A.id = D.article_id
		<where>
			    <if test="title != null">A.title  like CONCAT( '%', '${title}',  '%')</if>
		</where>
		
  </select>
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog_article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert"  useGeneratedKeys="true"  keyProperty="id"  parameterType="cn.nilaile.ssm.entity.BlogArticle">
    insert into blog_article ( title, blog_des, 
      click_count, is_recommend, publish_date, 
      category_id, user_id, content
      )
    values (#{title,jdbcType=VARCHAR}, #{blogDes,jdbcType=VARCHAR}, 
      #{clickCount,jdbcType=INTEGER}, #{isRecommend,jdbcType=VARCHAR}, #{publishDate,jdbcType=TIMESTAMP}, 
      #{categoryId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  
  
  
  <insert id="insertSelective"   useGeneratedKeys="true"  keyProperty="id"  parameterType="cn.nilaile.ssm.entity.BlogArticle">
    insert into blog_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
    
      <if test="title != null">
        title,
      </if>
      <if test="blogDes != null">
        blog_des,
      </if>
      <if test="clickCount != null">
        click_count,
      </if>
      <if test="isRecommend != null">
        is_recommend,
      </if>
      <if test="publishDate != null">
        publish_date,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="blogDes != null">
        #{blogDes,jdbcType=VARCHAR},
      </if>
      <if test="clickCount != null">
        #{clickCount,jdbcType=INTEGER},
      </if>
      <if test="isRecommend != null">
        #{isRecommend,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null">
        #{publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.nilaile.ssm.entity.BlogArticle">
    update blog_article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="blogDes!= null">
        blog_des = #{blogDes,jdbcType=VARCHAR},
      </if>
      <if test="clickCount != null">
        click_count = #{clickCount,jdbcType=INTEGER},
      </if>
      <if test="isRecommend != null">
        is_recommend = #{isRecommend,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null">
        publish_date = #{publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.nilaile.ssm.entity.BlogArticle">
    update blog_article
    set title = #{title,jdbcType=VARCHAR},
      blog_des = #{blogDes,jdbcType=VARCHAR},
      click_count = #{clickCount,jdbcType=INTEGER},
      is_recommend = #{isRecommend,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=TIMESTAMP},
      category_id = #{categoryId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.nilaile.ssm.entity.BlogArticle">
    update blog_article
    set title = #{title,jdbcType=VARCHAR},
      blog_des = #{blogDes,jdbcType=VARCHAR},
      click_count = #{clickCount,jdbcType=INTEGER},
      is_recommend = #{isRecommend,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=TIMESTAMP},
      category_id = #{categoryId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>